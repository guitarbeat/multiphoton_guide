[build-system]
requires = ["setuptools>=65.5.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "multiphoton_guide"
version = "0.1.0"
description = "Multiphoton Microscopy Guide"
readme = "README.md"
requires-python = ">=3.9,<4.0,!=3.9.7"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["microscopy", "multiphoton", "streamlit", "analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "streamlit>=1.45.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "matplotlib>=3.7.0",
    "Pillow>=10.0.0",
    "tifffile>=2023.7.0",
    "scikit-image>=0.21.0",
    "opencv-python-headless>=4.8.0",
    "streamlit-nested-layout>=0.1.4; python_version >= '3.9' and python_version != '3.9.7'",
    "streamlit-pdf-viewer>=0.0.23",
    "streamlit-image-coordinates>=0.1.6"
]

[project.optional-dependencies]
dev = [
    # Testing framework
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    # Code quality tools
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    # Development utilities
    "ipython>=8.0.0",
    "watchdog>=3.0.0"
]
build = [
    # For generating requirements.txt from pyproject.toml
    "tomli>=2.0.0",
    "pip-tools>=7.0.0"
]

[project.scripts]
multiphoton-guide = "app:main"

[tool.poetry]
packages = [
  { include = "modules" }
]

[tool.setuptools.packages.find]
include = ["modules*"]
exclude = ["tests*", "data*", "assets*"]

[tool.pytest.ini_options]
# Test discovery
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Output options
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--cov=modules",
    "--cov-report=term-missing",
    "--cov-report=html:tests/coverage_html"
]

# Custom markers
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "streamlit: marks tests that require Streamlit testing framework",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

# Filter warnings
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning"
] 